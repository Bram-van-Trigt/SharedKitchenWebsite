//- Mixin for the cards with meals
mixin meals(mealData)
  div(class="col-sm-10 col-md-6 mt-4")
    div(class="card h-100")
      h3(class="card-header") #{mealData.mealName}
      div(class="card-body")
        h5(class="card-title") #{mealData.recipeRef.description}
        div(class="card-text")
          div(class="row")
            div(class="col-sm-6") Preperation: #{mealData.recipeRef.preperationTime}min 
            div(class="col-sm-6") Cooking: #{mealData.recipeRef.cookingTime}min 
          div(class="row")
            div(class="col-sm-6") #{mealData.recipeRef.persons} persons
      div(class="card-footer")
        form(action="/meals", method="POST", id="cast", target="_self")
          button(type="cast", class="btn btn-light btn-sm", name="cast", value=mealData._id) Cast to MagicMirror
          button(type="remove", class="btn btn-light btn-sm", name="remove", value=mealData._id) Remove
html
  head
    title= Meals
    style
      //- Bootstrap and custom css files
      include ../public/bootstrap/css/bootstrap.min.css
      include ./styles/custom.css
  
  //- body to set background color and include website header
  body(class= "container-fluid" style="background-color: #222629;")
    include ./partials/header.pug
    
    //- Subheader for currentpage
    h1(class="text-center" style="color: #87C232")= header
    
    //- loops through meals from database and reference to mixin above
    div(class="row")
        for meal in tableInput
          +meals(meal, casting)

    //- bootstrap javascript file
    script(src="bootstrap/js/bootstrap.min.js") 



//-
      tbody
        for meal in tableInput
          if meal.display
            - var casting = "Stop Magic Mirror Casting"
          else 
            - var casting = "Cast to Maggic Mirror"
          +recipe(meal, casting)